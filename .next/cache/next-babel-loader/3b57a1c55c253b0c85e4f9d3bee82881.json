{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _jsxFileName = \"/Users/harrycampaz/Documents/ReactJs/bitcoin-nextjs/pages/index.js\",\n    _this = this;\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Master from \"../components/ui/Master\";\nimport fetch from \"isomorphic-unfetch\";\nimport Price from \"../components/Price\";\nimport News from \"../components/News\"; //import React from 'react';\n\nvar Index = function Index(props) {\n  return __jsx(Master, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"col-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(Price, {\n    price: props.priceBitcoin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"col-md-8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Noticias del bitcoin\"), __jsx(News, {\n    news: props.news,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"col-md-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Proximos eventos del bitcoin\"))));\n};\n\nIndex.getInitialProps = function _callee() {\n  var price, news, events, resultPrice, resultNews;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://api.coinmarketcap.com/v2/ticker/1/'));\n\n        case 2:\n          price = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(fetch('https://newsapi.org/v2/everything?q=bitcoin&from=2019-12-28&sortBy=publishedAt&apiKey={}&language=es'));\n\n        case 5:\n          news = _context.sent;\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(fetch(\"https://www.eventbriteapi.com/v3/categories/?token=\".concat(_this.token, \"&locale=es_ES\")));\n\n        case 8:\n          events = _context.sent;\n          _context.next = 11;\n          return _regeneratorRuntime.awrap(price.json());\n\n        case 11:\n          resultPrice = _context.sent;\n          _context.next = 14;\n          return _regeneratorRuntime.awrap(news.json());\n\n        case 14:\n          resultNews = _context.sent;\n          return _context.abrupt(\"return\", {\n            priceBitcoin: resultPrice.data.quotes.USD,\n            news: resultNews.articles\n          });\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/harrycampaz/Documents/ReactJs/bitcoin-nextjs/pages/index.js"],"names":["Master","fetch","Price","News","Index","props","priceBitcoin","news","getInitialProps","price","token","events","json","resultPrice","resultNews","data","quotes","USD","articles"],"mappings":";;;;;;;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB,C,CAGA;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD;AAAA,SAEV,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEG,MAAC,KAAD;AAAO,IAAA,KAAK,EAAEA,KAAK,CAACC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,CAFF,EAQE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADA,EAED,MAAC,IAAD;AAAM,IAAA,IAAI,EAAED,KAAK,CAACE,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFC,CARF,EAYE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADA,CAZF,CADJ,CAFU;AAAA,CAAd;;AAuBAH,KAAK,CAACI,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACAP,KAAK,CAAC,4CAAD,CADL;;AAAA;AACdQ,UAAAA,KADc;AAAA;AAAA,2CAGDR,KAAK,CAAC,sGAAD,CAHJ;;AAAA;AAGdM,UAAAA,IAHc;AAAA;AAAA,2CAKCN,KAAK,8DAAuD,KAAI,CAACS,KAA5D,mBALN;;AAAA;AAKdC,UAAAA,MALc;AAAA;AAAA,2CAOMF,KAAK,CAACG,IAAN,EAPN;;AAAA;AAOdC,UAAAA,WAPc;AAAA;AAAA,2CAQKN,IAAI,CAACK,IAAL,EARL;;AAAA;AAQdE,UAAAA,UARc;AAAA,2CAUb;AACHR,YAAAA,YAAY,EAAEO,WAAW,CAACE,IAAZ,CAAiBC,MAAjB,CAAwBC,GADnC;AAEHV,YAAAA,IAAI,EAAEO,UAAU,CAACI;AAFd,WAVa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAgBA,eAAed,KAAf","sourcesContent":["import Master from \"../components/ui/Master\";\nimport fetch from \"isomorphic-unfetch\";\nimport Price from \"../components/Price\";\nimport News from \"../components/News\";\n\n\n//import React from 'react';\n\nconst Index = (props) => (\n\n    <Master>\n        <div className=\"row\">\n          \n          <div className=\"col-12\">\n             \n             <Price price={props.priceBitcoin}/>\n              \n          </div>\n\n          <div className=\"col-md-8\">\n          <h2>Noticias del bitcoin</h2>\n         <News news={props.news}/>\n          </div>\n          <div className=\"col-md-4\">\n          <h2>Proximos eventos del bitcoin</h2>\n              </div>\n        </div>\n    </Master>\n\n);\n\nIndex.getInitialProps = async () => {\n    const price = await fetch('https://api.coinmarketcap.com/v2/ticker/1/')\n\n    const news = await fetch('https://newsapi.org/v2/everything?q=bitcoin&from=2019-12-28&sortBy=publishedAt&apiKey={}&language=es');\n\n    const events = await fetch(`https://www.eventbriteapi.com/v3/categories/?token=${this.token}&locale=es_ES`);\n\n    const resultPrice = await price.json();\n    const resultNews = await news.json();\n\n    return {\n        priceBitcoin: resultPrice.data.quotes.USD,\n        news: resultNews.articles\n    }\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}